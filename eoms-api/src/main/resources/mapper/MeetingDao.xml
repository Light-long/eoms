<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tx.eoms.dao.MeetingDao">
    
    <select id="searchMeetingMembersInSameDept" parameterType="String" resultType="boolean">
        select
            if(count(distinct u.dept_id) = 1, true, false) as bool
        from tb_meeting as m
        join tb_user as u on JSON_CONTAINS(m.members, cast(u.id as char))
        where m.uuid = #{uuid} and u.status = 1

    </select>

    <select id="searchMeetingById" parameterType="HashMap" resultType="HashMap">
        SELECT
            m.uuid,
            m.creator_id AS creatorId,
            IF(creator_id = #{userId}, "true", "false") AS isCreator,
            m.title,
            u.name,
            DATE_FORMAT( m.date, '%Y-%m-%d' ) AS date,
            m.place,
            DATE_FORMAT( m.START, '%H:%i' ) AS start,
            DATE_FORMAT( m.END, '%H:%i' ) AS end,
            m.type,
            m.status,
            m.desc,
            m.instance_id AS instanceId
        FROM tb_meeting m
        JOIN tb_user u ON m.creator_id = u.id
        WHERE m.id = #{id} AND u.status = 1
    </select>

    <select id="searchOfflineMeetingList" parameterType="HashMap" resultType="HashMap">
        SELECT
          m.id,
          m.uuid,
          m.title,
          u.name,
          DATE_FORMAT(m.date,'%Y-%m-%d') AS date,
          m.place,
          DATE_FORMAT(m.start,'%H:%i') AS start,
          DATE_FORMAT(m.end,'%H:%i') AS end,
          m.status,
          m.desc,
          m.instance_id as instanceId,
          if(m.creator_id = #{userId}, "true", "false") as isCreator,
          IF(JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR))=1,"true","false") AS mine
        FROM tb_meeting as m
        join tb_meeting_room as mr on m.place = mr.name
        join tb_user as u on u.id = m.creator_id
        where m.type = 2 and m.date = #{date}
        <if test="mold == '我的会议' ">
            and JSON_CONTAINS(m.members, cast(#{userId} as char))
        </if>
        <if test="roomName != null">
            and mr.name = #{roomName}
        </if>
        order by m.start asc
      </select>
    
    <update id="updateMeetingInstanceId" parameterType="HashMap">
        update tb_meeting
        set instance_id = #{instanceId}
        where uuid = #{uuid}
    </update>

    <insert id="addMeeting" parameterType="com.tx.eoms.pojo.Meeting">
        insert into tb_meeting
        set title = #{title},
        <if test="uuid != null">
            uuid = #{uuid},
        </if>
        `date` = #{date},
        creator_id = #{creatorId},
        <if test="place != null">
            place = #{place},
        </if>
        `start` = #{start},
        `end` = #{end},
        `type` = #{type},
        members = #{members},
        `desc` = #{desc},
        instance_id = #{instanceId},
        status = #{status},
        create_time = NOW()
    </insert>

    <select id="searchMeetingInfo" parameterType="long" resultType="HashMap">
        select
            m.title,
            m.date,
            m.place,
            DATE_FORMAT(m.`start`, '%H:%i') as start,
            DATE_FORMAT(m.`end`, '%H:%i') as end,
            m.status,
            CONCAT(
                "[",
                GROUP_CONCAT(
                    JSON_OBJECT(
                        "name", u.name,
                        "photo", u.photo
                    )
                    SEPARATOR ","
                ),
                "]"
            ) as members
        from tb_meeting as m left join tb_user as u
        on JSON_CONTAINS(m.members, cast(u.id as char))
        where m.id = #{id} and u.status = 1
    </select>

    <select id="searchCurrentMeetingInfo" parameterType="long" resultType="HashMap">
        select
            m.title,
            m.date,
            m.place,
            DATE_FORMAT(m.`start`,'%H:%i') AS `start`,
            DATE_FORMAT(m.`end`,'%H:%i') AS `end`,
            m.status,
            (
                select concat(
                    "[",
                    GROUP_CONCAT(
                        JSON_OBJECT(
                            "name", u.name,
                            "photo", u.photo
                        )
                        SEPARATOR ","
                    ),
                    "]"
                )
                from tb_user as u where JSON_CONTAINS(m.members, cast(u.id as char))
            ) as members,
            (
                select concat(
                    "[",
                    GROUP_CONCAT(
                        JSON_OBJECT(
                            "name", u.name,
                            "photo", u.photo
                        )
                        SEPARATOR ","
                    ),
                    "]"
                )
                from tb_user as u where JSON_CONTAINS(m.present, cast(u.id as char))
            ) as present,
            (
                select concat(
                    "[",
                    GROUP_CONCAT(
                        JSON_OBJECT(
                            "name", u.name,
                            "photo", u.photo
                        )
                        SEPARATOR ","
                    ),
                    "]"
                )
                from tb_user as u where JSON_CONTAINS(m.unpresent, cast(u.id as char))
            ) as unpresent
        from tb_meeting as m
        where m.id = #{id}
    </select>
    
    <delete id="deleteMeetingApplication" parameterType="HashMap">
        delete from tb_meeting
        where id = #{id} and creator_id = #{creatorId}
    </delete>

    <select id="searchOnlineMeetingList" parameterType="HashMap" resultType="HashMap">
        SELECT
            m.id,
            m.uuid,
            m.title,
            u.name,
            DATE_FORMAT(m.date,'%Y-%m-%d') AS date,
            DATE_FORMAT(m.start,'%H:%i') AS start,
            DATE_FORMAT(m.end,'%H:%i') AS end,
            m.status,
            m.desc,
            m.instance_id as instanceId,
            JSON_LENGTH ( m.members ) AS num,
            if(m.creator_id = #{userId}, "true", "false") as isCreator,
            IF(JSON_CONTAINS(m.members, CAST(#{userId} AS CHAR)) = 1,"true","false") AS mine
        FROM tb_meeting as m
        join tb_user as u on u.id = m.creator_id
        where m.type = 1 and m.date = #{date}
        <if test="mold == '我的会议' ">
            and JSON_CONTAINS(m.members, cast(#{userId} as char))
        </if>
        order by m.start asc
    </select>

    <select id="searchOnlineMeetingMembers" parameterType="HashMap" resultType="HashMap">
        select
            u.id,
            u.name,
            u.photo,
            if (u.id = #{userId}, 1, 0) as mine
        from tb_meeting as m join tb_user as u
        on JSON_CONTAINS(m.members, cast(u.id as char))
        where m.id = #{meetingId} and u.`status` = 1
        order by mine desc
    </select>

    <select id="searchCanCheckinMeeting" parameterType="HashMap" resultType="long">
        select count(*)
        from tb_meeting
        where id = #{meetingId}
        and status in (3, 4)
        and NOW() between DATE_SUB(concat(date, " ", start), interval 5 minute) and DATE_ADD(concat(date, " ", start), interval 15 minute)
        and JSON_CONTAINS( ifnull(members, JSON_ARRAY()), cast(#{userId} as char))
        and not JSON_CONTAINS( ifnull(present, JSON_ARRAY()), cast(#{userId} as char))
    </select>

    <update id="updateMeetingPresent" parameterType="HashMap">
        update tb_meeting
        set present = JSON_ARRAY_APPEND( ifnull(present, JSON_ARRAY()), '$', #{userId})
        where id = #{meetingId}
        and NOW() >= DATE_SUB(CONCAT(date," ",`start`), INTERVAL 15 MINUTE)
        and NOW() &lt; DATE_SUB(CONCAT(date," ",`end`),INTERVAL 15 MINUTE)
        and JSON_CONTAINS( ifnull(members, JSON_ARRAY()), cast(#{userId} as char))
        and not JSON_CONTAINS( ifnull(present, JSON_ARRAY()), cast(#{userId} as char))
    </update>
</mapper>